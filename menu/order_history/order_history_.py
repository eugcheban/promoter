from aiogram_dialog import Dialog, StartMode, Window, DialogManager
from aiogram_dialog.widgets.kbd import Start, Cancel, Button, SwitchTo, Row
from aiogram_dialog.widgets.input import TextInput, ManagedTextInput
from aiogram_dialog.widgets.text import Const
from aiogram_dialog.widgets.text import Jinja
from functools import partial
import asyncio
from aiogram.types import CallbackQuery, Message
from database.db_mysql import MySQLDatabase
from api import Api

from menu.states import (
    SubscribersSG, BotsActivationSG, ViewsSG, OrderHistorySG, AccountDetails, BufferSG,
    ReactionsSG, VotesSG, SharesSG, MainSG, DevSG, SubscribersStableSG, OrderSG, ServicesData
)

db = MySQLDatabase()
ap = Api()

msg = """
‚û°Ô∏è –°—Ç–∞—Ä—Ç: 0-10 –º–∏–Ω—É—Ç
‚û°Ô∏è –°–ø–∏—Å–∞–Ω–∏—è: –ù–µ—Ç
‚û°Ô∏è‚Äã‚Äã –°–∫–æ—Ä–æ—Å—Ç—å: 50–ö/–î–µ–Ω—å
‚ÑπÔ∏è –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –æ–ø—Ä–æ—Å—ã
"""

async def on_start(*args, **kwargs):
    BufferSG.cancel_response = None

async def getter(dialog_manager: DialogManager, **kwargs):
    accountDetails = AccountDetails(user=kwargs['event_from_user'])
    #accountDetails.info["order_history"] = []
    await accountDetails.update()
    data = accountDetails.info["order_history"]
    return {
        "data": data,
        "orders": len(data),
        "cancel_response": BufferSG.cancel_response
    }

async def input_orderid_filter(message: str) -> bool:
    msg = message.html_text
    print(message.html_text)
    order_id = 0
    command = None
    if '_' in msg:
        command = msg.split('_')[0]
        order_id = msg.split('_')[1]
        # check the correction index of order
        if len(order_id) <= 0:
            db.SET_log_record(f"Wrong ID command! {msg}")
            return False
    else:
        db.SET_log_record(f"Wrong command! {msg}")
        return False
    return True

async def order_cancel(callback: CallbackQuery, widget: ManagedTextInput[str], manager: DialogManager, data: str):
    order_id = data.split('_')[1]
    try:
        response = ap.cancel(order_id)
        print(response)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á 'error' –≤ –æ—Ç–≤–µ—Ç–µ
        if 'error' in response:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
            if response['error'] == 'error.cancel_unavailable':
                db.SET_log_record(f"Error: {response['error']}")
                BufferSG.cancel_response = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑."
            else:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
                db.SET_log_record(f"Error: {response['error']}")
                BufferSG.cancel_response = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∑–∞–∫–∞–∑–∞."
        else:
            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç, –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
            print("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç")
            # –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∞ –ø—Ä–æ –∑–∞–∫—Ä—ã—Ç–∏–µ –∑–∞–∫–∞–∑–∞, –≤—Ä—É—á–Ω—É—é –≤–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.SET_log_record(f"Order # {order_id} had been canceled")

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        db.SET_log_record(f"Exception occurred: {e}")
        BufferSG.cancel_response = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞."

order_history_menu = Dialog(
    Window(
        Jinja("""
{% for item in data[-5:] %}
<b><u>üî∂ {{ item['order_name'] }}</u></b>
- <b>–°—Ç–∞—Ç—É—Å:</b>  {{ item['status'] }}
- <b>–°—Å—ã–ª–∫–∞:</b> {{ item['link'] }}
- <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å:</b> {{ item['remains'] }}
- <b>–¶–µ–Ω–∞/–ö–æ–ª-–≤–æ:</b> {{ item['price'] }} / {{ item['count'] }}
<b>–ó–∞–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑</b> ‚ñ∂Ô∏è  /cancel_{{ item['order_id'] }}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
              
{% endfor %}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤</b>
{% if cancel_response != None %}
              
<b>üí¨ {{cancel_response}} </b>
{% endif %}
        """),
        Cancel(
            Const("–ù–∞–∑–∞–¥")
        ),
        TextInput(
            id="input_cmd_cancel", 
            on_success=order_cancel,
            filter=input_orderid_filter
        ),
        parse_mode="HTML",
        state=OrderHistorySG.order_history_,
        disable_web_page_preview=True
    ),
    on_start=on_start,
    getter=getter
)
